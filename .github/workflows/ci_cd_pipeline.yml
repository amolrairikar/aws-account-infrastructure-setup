name: Deploy common infrastructure

on:
  push:

permissions:
  contents: read
  id-token: write

jobs:

  deploy_infrastructure:

    runs-on: ubuntu-latest
    env:
      S3_STATE_BUCKET_NAME: ${{ secrets.S3_STATE_BUCKET_NAME }}
      TF_VAR_infra_role_arn: ${{ secrets.TF_VAR_infra_role_arn }}
      TF_VAR_terraform_user_arn: ${{ secrets.TF_VAR_terraform_user_arn }}
      TF_VAR_email: ${{ secrets.EMAIL }}
      TF_VAR_environment: "prod"
      TF_VAR_project_name: "accountSetup"
      TF_VAR_account_number: ${{ secrets.AWS_ACCOUNT_NUMBER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Set up AWS credentials (using OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TF_VAR_INFRA_ROLE_ARN }}
          aws-region: 'us-east-2'
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        run: |
          echo "Initializing Terraform..."
          terraform init \
            -backend-config="bucket=${S3_STATE_BUCKET_NAME}" \
            -backend-config="key=account-setup/terraform.tfstate" \
            -backend-config="region=us-east-2" \
            -backend-config="assume_role={role_arn=\"${TF_VAR_infra_role_arn}\", session_name=\"terraform-session\"}"

      - name: Import existing OIDC (temporary step)
        run: |
          echo "Importing existing OIDC provider..."
          terraform import aws_iam_openid_connect_provider.github_oidc_provider arn:aws:iam::203918855457:oidc-provider/token.actions.githubusercontent.com

      - name: Plan Terraform
        run: |
          echo "Planning Terraform configuration..."
          terraform plan -out=tfplan

      #- name: Apply Terraform
        #run: |
          #echo "Applying Terraform configuration..."
          #terraform apply -auto-approve tfplan